@page "/code-generator"
@using CrudGenerator.Shared
@inject HttpClient Http

<h3>Code Generator</h3>

<!-- Form content remains the same -->
@code {
    private CodeGenerationRequest Request { get; set; } = new CodeGenerationRequest
        {
            Models = new List<ModelDefinition>(),
            ResponseType = "zip",
            IncludeJwtAuthentication = false
        };

    private Dictionary<string, string> GeneratedFiles = new();

    private async Task GenerateCode()
    {
        var response = await Http.PostAsJsonAsync("api/CodeGeneration/generate", Request);

        if (response.IsSuccessStatusCode)
        {
            if (Request.ResponseType == "text")
            {
                GeneratedFiles = await response.Content.ReadFromJsonAsync<Dictionary<string, string>>();
            }
            else
            {
                var zipBytes = await response.Content.ReadAsByteArrayAsync();
                GeneratedFiles.Add("GeneratedCode.zip", Convert.ToBase64String(zipBytes));
            }
        }
        else
        {
            // Handle error
            Console.WriteLine("Error generating code");
        }
    }

    private void AddModel()
    {
        Request.Models.Add(new ModelDefinition
            {
                Name = $"Model{Request.Models.Count + 1}",
                Attributes = new List<AttributeDefinition>(),
                Relationships = new List<Relationship>()
            });
    }

    private void AddAttribute(ModelDefinition model)
    {
        model.Attributes.Add(new AttributeDefinition { Name = "", Type = "" });
    }

    private void RemoveAttribute(ModelDefinition model, AttributeDefinition attribute)
    {
        model.Attributes.Remove(attribute);
    }

    private void AddRelationship(ModelDefinition model)
    {
        model.Relationships.Add(new Relationship
            {
                PropertyName = "",
                TargetModel = "",
                Type = RelationshipType.OneToMany
            });
    }

    private void RemoveRelationship(ModelDefinition model, Relationship relationship)
    {
        model.Relationships.Remove(relationship);
    }
}
